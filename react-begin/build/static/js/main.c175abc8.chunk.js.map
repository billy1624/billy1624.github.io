{"version":3,"sources":["index.js"],"names":["calculateWinner","squares","lines","i","length","a","b","c","Square","props","className","onClick","value","Board","this","renderSquare","React","Component","Game","state","history","Array","fill","xIsNext","stepNum","slice","pop","setState","concat","status","current","currentXIsNext","winner","moves","map","step","move","text","key","jumpTo","handleClick","ReactDOM","render","document","getElementById"],"mappings":"4MAIA,SAASA,EAAgBC,GAWrB,IAVA,IAAMC,EAAQ,CACV,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEFC,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CAAC,IAAD,cACjBD,EAAMC,GADW,GAC5BE,EAD4B,KACzBC,EADyB,KACtBC,EADsB,KAEnC,GAAIN,EAAQI,IAAMJ,EAAQI,KAAOJ,EAAQK,IAAML,EAAQI,KAAOJ,EAAQM,GAClE,OAAON,EAAQI,GAGvB,OAAO,KAGX,SAASG,EAAOC,GACZ,OACI,4BAAQC,UAAU,SAASC,QAAS,kBAAMF,EAAME,YAC3CF,EAAMG,O,IAKbC,E,qLACWV,GAAI,IAAD,OACZ,OAAO,kBAACK,EAAD,CAAQI,MAAOE,KAAKL,MAAMR,QAAQE,GAAIQ,QAAS,kBAAM,EAAKF,MAAME,QAAQR,Q,+BAI/E,OACI,6BACI,yBAAKO,UAAU,aACVI,KAAKC,aAAa,GAClBD,KAAKC,aAAa,GAClBD,KAAKC,aAAa,IAEvB,yBAAKL,UAAU,aACVI,KAAKC,aAAa,GAClBD,KAAKC,aAAa,GAClBD,KAAKC,aAAa,IAEvB,yBAAKL,UAAU,aACVI,KAAKC,aAAa,GAClBD,KAAKC,aAAa,GAClBD,KAAKC,aAAa,S,GArBnBC,IAAMC,WA4BpBC,E,YACF,WAAYT,GAAQ,IAAD,8BACf,4CAAMA,KACDU,MAAQ,CACTC,QAAS,CACL,CAACnB,QAASoB,MAAM,GAAGC,KAAK,QAE5BC,SAAS,EACTC,QAAS,GAPE,E,yEAWPrB,GACR,IAAMiB,EAAUN,KAAKK,MAAMC,QAAQK,MAAM,EAAGX,KAAKK,MAAMK,QAAQ,GAEzDvB,EADUmB,EAAQK,OAAO,GAAGC,MACVzB,QAAQwB,QAC3BzB,EAAgBC,IAAYA,EAAQE,KAGzCF,EAAQE,GAAKW,KAAKK,MAAMI,QAAU,IAAM,IACxCT,KAAKa,SAAS,CACVP,QAASA,EAAQQ,OAAO,CAAC,CACrB3B,QAASA,KAEbsB,SAAUT,KAAKK,MAAMI,QACrBC,QAASJ,EAAQhB,Y,6BAIlBD,GACHW,KAAKa,SAAS,CACVH,QAASrB,EACToB,QAASpB,EAAI,IAAM,M,+BAIjB,IAKF0B,EALC,OACCT,EAAUN,KAAKK,MAAMC,QACrBU,EAAUV,EAAQN,KAAKK,MAAMK,SAC7BO,EAAiBjB,KAAKK,MAAMI,QAC5BS,EAAShC,EAAgB8B,EAAQ7B,SAGnC4B,EADW,MAAVG,EACQ,WAAaA,EAEb,iBAAmBD,EAAiB,IAAM,KAGvD,IAAME,EAAQb,EAAQc,KAAI,SAACC,EAAMC,GAC7B,IAAMC,EAAOD,EAAO,eAAiBA,EAAO,kBAC5C,OACI,wBAAIE,IAAKF,GACL,4BAAQzB,QAAS,kBAAM,EAAK4B,OAAOH,KAAQC,OAKvD,OACI,yBAAK3B,UAAU,QACX,yBAAKA,UAAU,cACX,kBAACG,EAAD,CAAOZ,QAAS6B,EAAQ7B,QAASU,QAAS,SAACR,GAAD,OAAO,EAAKqC,YAAYrC,OAEtE,yBAAKO,UAAU,aACX,6BAAMmB,GACN,4BAAKI,S,GAhENjB,IAAMC,WAyEzBwB,IAASC,OACL,kBAACxB,EAAD,MACAyB,SAASC,eAAe,U","file":"static/js/main.c175abc8.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction calculateWinner(squares) {\n    const lines = [\n        [0, 1, 2],\n        [3, 4, 5],\n        [6, 7, 8],\n        [0, 3, 6],\n        [1, 4, 7],\n        [2, 5, 8],\n        [0, 4, 8],\n        [2, 4, 6],\n    ];\n    for (let i = 0; i < lines.length; i++) {\n        const [a, b, c] = lines[i];\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n            return squares[a];\n        }\n    }\n    return null;\n}\n\nfunction Square(props) {\n    return (\n        <button className=\"square\" onClick={() => props.onClick()}>\n            {props.value}\n        </button>\n    );\n}\n\nclass Board extends React.Component {\n    renderSquare(i) {\n        return <Square value={this.props.squares[i]} onClick={() => this.props.onClick(i)} />;\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"board-row\">\n                    {this.renderSquare(0)}\n                    {this.renderSquare(1)}\n                    {this.renderSquare(2)}\n                </div>\n                <div className=\"board-row\">\n                    {this.renderSquare(3)}\n                    {this.renderSquare(4)}\n                    {this.renderSquare(5)}\n                </div>\n                <div className=\"board-row\">\n                    {this.renderSquare(6)}\n                    {this.renderSquare(7)}\n                    {this.renderSquare(8)}\n                </div>\n            </div>\n        );\n    }\n}\n\nclass Game extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            history: [\n                {squares: Array(9).fill(null)},\n            ],\n            xIsNext: true,\n            stepNum: 0,\n        }\n    }\n\n    handleClick(i) {\n        const history = this.state.history.slice(0, this.state.stepNum+1);\n        const current = history.slice(-1).pop();\n        const squares = current.squares.slice();\n        if ( calculateWinner(squares) || squares[i] ) {\n            return;\n        }\n        squares[i] = this.state.xIsNext ? 'X' : 'O';\n        this.setState({\n            history: history.concat([{\n                squares: squares,\n            }]),\n            xIsNext: !this.state.xIsNext,\n            stepNum: history.length,\n        });\n    }\n\n    jumpTo(i) {\n        this.setState({\n            stepNum: i,\n            xIsNext: i % 2 === 0\n        });\n    }\n\n    render() {\n        const history = this.state.history\n        const current = history[this.state.stepNum];\n        const currentXIsNext = this.state.xIsNext;\n        const winner = calculateWinner(current.squares);\n        let status;\n        if ( winner != null ) {\n            status = 'Winner: ' + winner;\n        } else {\n            status = 'Next player: ' + (currentXIsNext ? 'X' : 'O');\n        }\n\n        const moves = history.map((step, move) => {\n            const text = move ? 'Go to move #' + move : 'Go to the start';\n            return (\n                <li key={move}>\n                    <button onClick={() => this.jumpTo(move)}>{text}</button>\n                </li>\n            );\n        });\n\n        return (\n            <div className=\"game\">\n                <div className=\"game-board\">\n                    <Board squares={current.squares} onClick={(i) => this.handleClick(i)} />\n                </div>\n                <div className=\"game-info\">\n                    <div>{status}</div>\n                    <ol>{moves}</ol>\n                </div>\n            </div>\n        );\n    }\n}\n\n// ========================================\n\nReactDOM.render(\n    <Game />,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}